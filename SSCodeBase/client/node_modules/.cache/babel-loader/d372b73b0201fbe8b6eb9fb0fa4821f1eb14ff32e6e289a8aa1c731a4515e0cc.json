{"ast":null,"code":"var _jsxFileName = \"/home/a/code/repos/SenpaiSuggests/SSCodeBase/client/src/pages/Signup.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport styles from './signup.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst entries = [\"The human known as {username} will meet their fate by {password}.\", \"At exactly noon, {username} will accidentally reveal their secret password '{password}' to an audience of ducks.\", \"{username} will be struck by a runaway shopping cart while yelling '{password}'!\", \"{username} shall vanish mysteriously while attempting to type '{password}' on a vintage typewriter.\", \"During karaoke, {username} will belt out '{password}' and be transported to a parallel universe where everyone speaks in haikus.\"];\nfunction Signup() {\n  _s();\n  const [entryTemplate, setEntryTemplate] = useState(entries[0]);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  // Randomize the entry template when the component mounts\n  useEffect(() => {\n    const randomEntry = entries[Math.floor(Math.random() * entries.length)];\n    setEntryTemplate(randomEntry);\n  }, []);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const response = await fetch('http://localhost:5000/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      const result = await response.json();\n      alert(result.message);\n    } catch (error) {\n      console.error('Error:', error);\n      alert('An error occurred. Please try again.');\n    }\n  };\n\n  // Replace placeholders with the input fields\n  const entryText = entryTemplate.replace(\"{username}\", `<input type=\"text\" placeholder=\"Username\" required />`).replace(\"{password}\", `<input type=\"text\" placeholder=\"Password\" required />`);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.signupPage,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.deathNoteRules,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Death Note Rules\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"1. The human whose name is written in this note shall die...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"2. This note will not take effect unless the writer has the person's face in mind...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.signInForm,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"sign-in-form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.entry,\n          dangerouslySetInnerHTML: {\n            __html: entryText\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Username\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Confirm Entry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(Signup, \"HZ+FjAVS1XK2I7RVJYwmeaw2e60=\");\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useEffect","useState","styles","jsxDEV","_jsxDEV","entries","Signup","_s","entryTemplate","setEntryTemplate","username","setUsername","password","setPassword","randomEntry","Math","floor","random","length","handleSubmit","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","result","json","alert","message","error","console","entryText","replace","className","signupPage","children","deathNoteRules","fileName","_jsxFileName","lineNumber","columnNumber","signInForm","id","onSubmit","entry","dangerouslySetInnerHTML","__html","type","placeholder","value","onChange","e","target","required","_c","$RefreshReg$"],"sources":["/home/a/code/repos/SenpaiSuggests/SSCodeBase/client/src/pages/Signup.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styles from './signup.module.css';\n\nconst entries = [\n  \"The human known as {username} will meet their fate by {password}.\",\n  \"At exactly noon, {username} will accidentally reveal their secret password '{password}' to an audience of ducks.\",\n  \"{username} will be struck by a runaway shopping cart while yelling '{password}'!\",\n  \"{username} shall vanish mysteriously while attempting to type '{password}' on a vintage typewriter.\",\n  \"During karaoke, {username} will belt out '{password}' and be transported to a parallel universe where everyone speaks in haikus.\"\n];\n\nfunction Signup() {\n  const [entryTemplate, setEntryTemplate] = useState(entries[0]);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  // Randomize the entry template when the component mounts\n  useEffect(() => {\n    const randomEntry = entries[Math.floor(Math.random() * entries.length)];\n    setEntryTemplate(randomEntry);\n  }, []);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const response = await fetch('http://localhost:5000/register', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username, password })\n      });\n      const result = await response.json();\n      alert(result.message);\n    } catch (error) {\n      console.error('Error:', error);\n      alert('An error occurred. Please try again.');\n    }\n  };\n\n  // Replace placeholders with the input fields\n  const entryText = entryTemplate\n    .replace(\"{username}\", `<input type=\"text\" placeholder=\"Username\" required />`)\n    .replace(\"{password}\", `<input type=\"text\" placeholder=\"Password\" required />`);\n\n  return (\n    <div className={styles.signupPage}>\n      <div className={styles.deathNoteRules}>\n        <h2>Death Note Rules</h2>\n        <p>1. The human whose name is written in this note shall die...</p>\n        <p>2. This note will not take effect unless the writer has the person's face in mind...</p>\n        {/* Additional rules */}\n      </div>\n      <div className={styles.signInForm}>\n        <h2>Sign Up</h2>\n        <form id=\"sign-in-form\" onSubmit={handleSubmit}>\n          <p className={styles.entry} dangerouslySetInnerHTML={{ __html: entryText }} />\n          <input\n            type=\"text\"\n            placeholder=\"Username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            required\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n          />\n          <button type=\"submit\">Confirm Entry</button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Signup;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}