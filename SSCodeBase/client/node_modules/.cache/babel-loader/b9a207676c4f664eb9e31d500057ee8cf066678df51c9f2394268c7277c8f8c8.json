{"ast":null,"code":"var _jsxFileName = \"/home/venicio/Code-Stuffs/ACM/DEV/SenpaiSuggests/SSCodeBase/client/src/App.js\";\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\nimport LoginPage from './Components/LoginPage.jsx';\nimport { GoogleLogin } from './Components/GoogleAuth.jsx';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  return (\n    /*#__PURE__*/\n    /*<Router>\n      <Routes>\n        <Route path=\"/\" element={<Navigate to=\"/login\" />} />\n        <Route path=\"/login\" element={<LoginPage />} />\n       </Routes>\n    </Router>*/\n    _jsxDEV(GoogleLogin, {\n      onSuccess: credentialResponse => {\n        var credentialResponseDecoded = jwtDecode(credentialResponse.credential);\n        console.log(credentialResponseDecoded);\n      },\n      onError: () => {\n        console.log('Login Failed');\n      },\n      theme: 'filled_black'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this)\n  );\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Router","Route","Routes","Navigate","LoginPage","GoogleLogin","jwtDecode","jsxDEV","_jsxDEV","App","onSuccess","credentialResponse","credentialResponseDecoded","credential","console","log","onError","theme","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/venicio/Code-Stuffs/ACM/DEV/SenpaiSuggests/SSCodeBase/client/src/App.js"],"sourcesContent":["import { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\nimport LoginPage from './Components/LoginPage.jsx';\nimport { GoogleLogin } from './Components/GoogleAuth.jsx';\nimport { jwtDecode } from 'jwt-decode';\n\n\nconst App = () => {\n  return (\n    /*<Router>\n      <Routes>\n        <Route path=\"/\" element={<Navigate to=\"/login\" />} />\n        <Route path=\"/login\" element={<LoginPage />} />\n\n      </Routes>\n    </Router>*/\n    <GoogleLogin\n      onSuccess={(credentialResponse) => {\n        var credentialResponseDecoded = jwtDecode(\n          credentialResponse.credential\n        );\n        console.log(credentialResponseDecoded);\n      }}\n      onError={() => {\n        console.log('Login Failed');\n      }}\n      theme={'filled_black'}\n    />\n  );\n};\n\nexport default App;\n"],"mappings":";AAAA,SAASA,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,kBAAkB;AACnF,OAAOC,SAAS,MAAM,4BAA4B;AAClD,SAASC,WAAW,QAAQ,6BAA6B;AACzD,SAASC,SAAS,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGvC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAChB;IAAA;IACE;AACJ;AACA;AACA;AACA;AACA;IAEID,OAAA,CAACH,WAAW;MACVK,SAAS,EAAGC,kBAAkB,IAAK;QACjC,IAAIC,yBAAyB,GAAGN,SAAS,CACvCK,kBAAkB,CAACE,UACrB,CAAC;QACDC,OAAO,CAACC,GAAG,CAACH,yBAAyB,CAAC;MACxC,CAAE;MACFI,OAAO,EAAEA,CAAA,KAAM;QACbF,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;MAC7B,CAAE;MACFE,KAAK,EAAE;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB;EAAC;AAEN,CAAC;AAACC,EAAA,GAtBIb,GAAG;AAwBT,eAAeA,GAAG;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}