{"ast":null,"code":"var _jsxFileName = \"/home/a/code/repos/SenpaiSuggests/SSCodeBase/client/src/pages/SignupPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styles from './SignupPage.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst entries = [\"The human known as {username} will meet their fate by {password}.\", \"At exactly noon, {username} will accidentally reveal their secret password '{password}' to an audience of ducks.\", \"{username} will be struck by a runaway shopping cart while yelling '{password}'!\", \"{username} shall vanish mysteriously while attempting to type '{password}' on a vintage typewriter.\", \"During karaoke, {username} will belt out '{password}' and be transported to a parallel universe where everyone speaks in haikus.\"];\nconst SignupPage = () => {\n  _s();\n  const [entryTemplate, setEntryTemplate] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  useEffect(() => {\n    // Pick a random entry when the component loads\n    setEntryTemplate(entries[Math.floor(Math.random() * entries.length)]);\n  }, []);\n  const handleUsernameChange = e => setUsername(e.target.value);\n  const handlePasswordChange = e => setPassword(e.target.value);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.signupPage,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.deathNoteRules,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Death Note Rules\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"1. The human whose name is written in this note shall die...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"2. This note will not take effect unless the writer has the person's face in mind...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.signInForm,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"entry\",\n          className: styles.entry,\n          children: entryTemplate.replace(\"{username}\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: username,\n            onChange: handleUsernameChange,\n            placeholder: \"Username\",\n            className: styles.input,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this)).replace(\"{password}\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: password,\n            onChange: handlePasswordChange,\n            placeholder: \"Password\",\n            className: styles.input,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: styles.button,\n          children: \"Confirm Entry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(SignupPage, \"D5Yv23VCvxyn+H/73j2BYmfOj3U=\");\n_c = SignupPage;\nexport default SignupPage;\nvar _c;\n$RefreshReg$(_c, \"SignupPage\");","map":{"version":3,"names":["React","useState","useEffect","styles","jsxDEV","_jsxDEV","entries","SignupPage","_s","entryTemplate","setEntryTemplate","username","setUsername","password","setPassword","Math","floor","random","length","handleUsernameChange","e","target","value","handlePasswordChange","className","signupPage","children","deathNoteRules","fileName","_jsxFileName","lineNumber","columnNumber","signInForm","id","entry","replace","type","onChange","placeholder","input","required","button","_c","$RefreshReg$"],"sources":["/home/a/code/repos/SenpaiSuggests/SSCodeBase/client/src/pages/SignupPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styles from './SignupPage.module.css';\n\nconst entries = [\n  \"The human known as {username} will meet their fate by {password}.\",\n  \"At exactly noon, {username} will accidentally reveal their secret password '{password}' to an audience of ducks.\",\n  \"{username} will be struck by a runaway shopping cart while yelling '{password}'!\",\n  \"{username} shall vanish mysteriously while attempting to type '{password}' on a vintage typewriter.\",\n  \"During karaoke, {username} will belt out '{password}' and be transported to a parallel universe where everyone speaks in haikus.\"\n];\n\nconst SignupPage = () => {\n  const [entryTemplate, setEntryTemplate] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  useEffect(() => {\n    // Pick a random entry when the component loads\n    setEntryTemplate(entries[Math.floor(Math.random() * entries.length)]);\n  }, []);\n\n  const handleUsernameChange = (e) => setUsername(e.target.value);\n  const handlePasswordChange = (e) => setPassword(e.target.value);\n\n  return (\n    <div className={styles.signupPage}>\n      <div className={styles.deathNoteRules}>\n        <h2>Death Note Rules</h2>\n        <p>1. The human whose name is written in this note shall die...</p>\n        <p>2. This note will not take effect unless the writer has the person's face in mind...</p>\n      </div>\n      \n      <div className={styles.signInForm}>\n        <h2>Sign Up</h2>\n        <form>\n          <p id=\"entry\" className={styles.entry}>\n            {entryTemplate\n              .replace(\"{username}\", \n                <input \n                  type=\"text\" \n                  value={username} \n                  onChange={handleUsernameChange} \n                  placeholder=\"Username\" \n                  className={styles.input}\n                  required \n                />\n              )\n              .replace(\"{password}\", \n                <input \n                  type=\"text\" \n                  value={password} \n                  onChange={handlePasswordChange} \n                  placeholder=\"Password\" \n                  className={styles.input}\n                  required \n                />\n              )}\n          </p>\n          <button type=\"submit\" className={styles.button}>Confirm Entry</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default SignupPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}