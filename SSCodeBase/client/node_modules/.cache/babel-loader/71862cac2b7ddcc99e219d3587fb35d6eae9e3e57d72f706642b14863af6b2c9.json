{"ast":null,"code":"import p5 from 'p5';\nexport const parallaxSketch = p => {\n  let layers = [];\n  let speed = 0.2;\n  let animeFont;\n  p.preload = () => {\n    animeFont = p.loadFont('/animeFont.ttf');\n  };\n  p.setup = () => {\n    p.createCanvas(p.windowWidth, p.windowHeight * 2); // Extended canvas height\n    for (let i = 0; i < 10; i++) {\n      layers.push({\n        x: p.random(p.width),\n        y: p.random(p.height),\n        size: p.random(50, 200),\n        speed: speed + i * 0.05\n      });\n    }\n  };\n  p.draw = () => {\n    p.background(255, 255, 255);\n    p.noStroke();\n\n    // Parallax effect: Moving bubbles\n    layers.forEach(layer => {\n      p.fill(255, 108, 180, 150);\n      p.circle(layer.x, layer.y, layer.size);\n      layer.x += layer.speed;\n      if (layer.x > p.width) {\n        layer.x = -layer.size;\n        layer.y = p.random(p.height);\n      }\n    });\n\n    // Text sections with anime font\n    p.textAlign(p.CENTER, p.CENTER);\n    p.textFont(animeFont);\n\n    // Welcome Message\n    p.textSize(72);\n    p.fill(255, 105, 180);\n    p.text(\"Welcome to Senpai Suggests\", p.width / 2, p.height * 0.1);\n\n    // Sections appearing with scroll\n    const sections = [{\n      text: \"My Likes\",\n      desc: \"This will take you to the liked animes that you chose!\",\n      y: p.height * 0.3\n    }, {\n      text: \"My Wishlist\",\n      desc: \"This is where you can add animes to your wishlist!\",\n      y: p.height * 0.5\n    }, {\n      text: \"I'm Feeling Lucky\",\n      desc: \"Let Senpai Suggest a random anime for you!\",\n      y: p.height * 0.7\n    }, {\n      text: \"Search\",\n      desc: \"Search for your favorite animes!\",\n      y: p.height * 0.9\n    }, {\n      text: \"Ask Senpai\",\n      desc: \"Get recommendations from Senpai!\",\n      y: p.height * 1.1\n    }, {\n      text: \"About Us\",\n      desc: \"Learn more about the team behind Senpai Suggests.\",\n      y: p.height * 1.3\n    }];\n\n    // Loop through sections and display based on scroll position\n    sections.forEach((section, index) => {\n      if (window.scrollY + p.height * 0.1 > section.y && window.scrollY < section.y + p.height) {\n        p.textSize(48);\n        p.text(section.text, p.width / 2, section.y);\n        p.textSize(24);\n        p.text(section.desc, p.width / 2, section.y + 30);\n      }\n    });\n  };\n  p.windowResized = () => {\n    p.resizeCanvas(p.windowWidth, p.windowHeight * 2); // Ensure canvas adjusts on resize\n  };\n};","map":{"version":3,"names":["p5","parallaxSketch","p","layers","speed","animeFont","preload","loadFont","setup","createCanvas","windowWidth","windowHeight","i","push","x","random","width","y","height","size","draw","background","noStroke","forEach","layer","fill","circle","textAlign","CENTER","textFont","textSize","text","sections","desc","section","index","window","scrollY","windowResized","resizeCanvas"],"sources":["/home/a/code/repos/SenpaiSuggests/SSCodeBase/client/src/pages/parallaxSketch.js"],"sourcesContent":["import p5 from 'p5';\n\nexport const parallaxSketch = (p) => {\n    let layers = [];\n    let speed = 0.2;\n    let animeFont;\n\n    p.preload = () => {\n        animeFont = p.loadFont('/animeFont.ttf');\n    };\n\n    p.setup = () => {\n        p.createCanvas(p.windowWidth, p.windowHeight * 2); // Extended canvas height\n        for (let i = 0; i < 10; i++) {\n            layers.push({\n                x: p.random(p.width),\n                y: p.random(p.height),\n                size: p.random(50, 200),\n                speed: speed + i * 0.05\n            });\n        }\n    };\n\n    p.draw = () => {\n        p.background(255, 255, 255);\n        p.noStroke();\n\n        // Parallax effect: Moving bubbles\n        layers.forEach(layer => {\n            p.fill(255, 108, 180, 150);\n            p.circle(layer.x, layer.y, layer.size);\n            layer.x += layer.speed;\n            if (layer.x > p.width) {\n                layer.x = -layer.size;\n                layer.y = p.random(p.height);\n            }\n        });\n\n        // Text sections with anime font\n        p.textAlign(p.CENTER, p.CENTER);\n        p.textFont(animeFont);\n\n        // Welcome Message\n        p.textSize(72);\n        p.fill(255, 105, 180);\n        p.text(\"Welcome to Senpai Suggests\", p.width / 2, p.height * 0.1);\n\n        // Sections appearing with scroll\n        const sections = [\n            { text: \"My Likes\", desc: \"This will take you to the liked animes that you chose!\", y: p.height * 0.3 },\n            { text: \"My Wishlist\", desc: \"This is where you can add animes to your wishlist!\", y: p.height * 0.5 },\n            { text: \"I'm Feeling Lucky\", desc: \"Let Senpai Suggest a random anime for you!\", y: p.height * 0.7 },\n            { text: \"Search\", desc: \"Search for your favorite animes!\", y: p.height * 0.9 },\n            { text: \"Ask Senpai\", desc: \"Get recommendations from Senpai!\", y: p.height * 1.1 },\n            { text: \"About Us\", desc: \"Learn more about the team behind Senpai Suggests.\", y: p.height * 1.3 }\n        ];\n\n        // Loop through sections and display based on scroll position\n        sections.forEach((section, index) => {\n            if (window.scrollY + p.height * 0.1 > section.y && window.scrollY < section.y + p.height) {\n                p.textSize(48);\n                p.text(section.text, p.width / 2, section.y);\n                p.textSize(24);\n                p.text(section.desc, p.width / 2, section.y + 30);\n            }\n        });\n    };\n\n    p.windowResized = () => {\n        p.resizeCanvas(p.windowWidth, p.windowHeight * 2); // Ensure canvas adjusts on resize\n    };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}