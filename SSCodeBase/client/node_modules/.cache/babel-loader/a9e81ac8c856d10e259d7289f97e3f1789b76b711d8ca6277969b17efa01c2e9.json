{"ast":null,"code":"import p5 from 'p5';\nexport const parallaxSketch = p => {\n  let layers = [];\n  let speed = 0.2;\n  let animeFont;\n  const sections = [{\n    id: 'my-likes',\n    text: \"My Likes\",\n    desc: \"This will take you to the liked animes that you chose!\",\n    y: 1\n  }, {\n    id: 'my-wishlist',\n    text: \"My Wishlist\",\n    desc: \"This is where you can add animes to your wishlist!\",\n    y: 1.5\n  }, {\n    id: 'feeling-lucky',\n    text: \"I'm Feeling Lucky\",\n    desc: \"Let Senpai Suggest a random anime for you!\",\n    y: 2\n  }, {\n    id: 'animelist',\n    text: \"Search\",\n    desc: \"Search for your favorite animes!\",\n    y: 2.5\n  }, {\n    id: 'reco',\n    text: \"Ask Senpai\",\n    desc: \"Get recommendations from Senpai!\",\n    y: 3\n  }, {\n    id: 'aboutus',\n    text: \"About Us\",\n    desc: \"Learn more about the team behind Senpai Suggests.\",\n    y: 3.5\n  }];\n  p.preload = () => {\n    animeFont = p.loadFont('/animeFont.ttf');\n  };\n  p.setup = () => {\n    p.createCanvas(p.windowWidth, p.windowHeight * 4); // Extended canvas height for all sections\n    for (let i = 0; i < 10; i++) {\n      layers.push({\n        x: p.random(p.width),\n        y: p.random(p.height),\n        size: p.random(50, 200),\n        speed: speed + i * 0.05\n      });\n    }\n  };\n  p.draw = () => {\n    p.background(255);\n\n    // Parallax effect\n    layers.forEach(layer => {\n      p.fill(255, 108, 180, 150);\n      p.circle(layer.x, layer.y, layer.size);\n      layer.x += layer.speed;\n      if (layer.x > p.width) {\n        layer.x = -layer.size;\n        layer.y = p.random(p.height);\n      }\n    });\n\n    // Display Welcome message with anime font\n    p.textSize(72);\n    p.fill(255, 105, 180);\n    p.textAlign(p.CENTER, p.CENTER);\n    p.textFont(animeFont); // Apply anime font\n    p.text(\"Welcome to Senpai Suggests\", p.width / 2, p.height * 0.1);\n\n    // Display sections with anime font based on scroll position\n    p.textSize(48);\n    sections.forEach(section => {\n      let sectionY = p.height * section.y;\n      if (window.scrollY + p.height * 0.1 > sectionY && window.scrollY < sectionY + p.height) {\n        p.fill(0);\n        p.textFont(animeFont); // Apply anime font\n        p.text(section.text, p.width / 2, sectionY);\n        p.textSize(24);\n        p.text(section.desc, p.width / 2, sectionY + 30);\n      }\n    });\n  };\n  p.windowResized = () => {\n    p.resizeCanvas(p.windowWidth, p.windowHeight * 4);\n  };\n};","map":{"version":3,"names":["p5","parallaxSketch","p","layers","speed","animeFont","sections","id","text","desc","y","preload","loadFont","setup","createCanvas","windowWidth","windowHeight","i","push","x","random","width","height","size","draw","background","forEach","layer","fill","circle","textSize","textAlign","CENTER","textFont","section","sectionY","window","scrollY","windowResized","resizeCanvas"],"sources":["/home/a/code/repos/SenpaiSuggests/SSCodeBase/client/src/pages/parallaxSketch.js"],"sourcesContent":["import p5 from 'p5';\n\nexport const parallaxSketch = (p) => {\n    let layers = [];\n    let speed = 0.2;\n    let animeFont;\n    const sections = [\n        { id: 'my-likes', text: \"My Likes\", desc: \"This will take you to the liked animes that you chose!\", y: 1 },\n        { id: 'my-wishlist', text: \"My Wishlist\", desc: \"This is where you can add animes to your wishlist!\", y: 1.5 },\n        { id: 'feeling-lucky', text: \"I'm Feeling Lucky\", desc: \"Let Senpai Suggest a random anime for you!\", y: 2 },\n        { id: 'animelist', text: \"Search\", desc: \"Search for your favorite animes!\", y: 2.5 },\n        { id: 'reco', text: \"Ask Senpai\", desc: \"Get recommendations from Senpai!\", y: 3 },\n        { id: 'aboutus', text: \"About Us\", desc: \"Learn more about the team behind Senpai Suggests.\", y: 3.5 }\n    ];\n\n    p.preload = () => {\n        animeFont = p.loadFont('/animeFont.ttf');\n    };\n\n    p.setup = () => {\n        p.createCanvas(p.windowWidth, p.windowHeight * 4); // Extended canvas height for all sections\n        for (let i = 0; i < 10; i++) {\n            layers.push({\n                x: p.random(p.width),\n                y: p.random(p.height),\n                size: p.random(50, 200),\n                speed: speed + i * 0.05\n            });\n        }\n    };\n\n    p.draw = () => {\n        p.background(255);\n\n        // Parallax effect\n        layers.forEach(layer => {\n            p.fill(255, 108, 180, 150);\n            p.circle(layer.x, layer.y, layer.size);\n            layer.x += layer.speed;\n            if (layer.x > p.width) {\n                layer.x = -layer.size;\n                layer.y = p.random(p.height);\n            }\n        });\n\n        // Display Welcome message with anime font\n        p.textSize(72);\n        p.fill(255, 105, 180);\n        p.textAlign(p.CENTER, p.CENTER);\n        p.textFont(animeFont); // Apply anime font\n        p.text(\"Welcome to Senpai Suggests\", p.width / 2, p.height * 0.1);\n\n        // Display sections with anime font based on scroll position\n        p.textSize(48);\n        sections.forEach(section => {\n            let sectionY = p.height * section.y;\n            if (window.scrollY + p.height * 0.1 > sectionY && window.scrollY < sectionY + p.height) {\n                p.fill(0);\n                p.textFont(animeFont); // Apply anime font\n                p.text(section.text, p.width / 2, sectionY);\n                p.textSize(24);\n                p.text(section.desc, p.width / 2, sectionY + 30);\n            }\n        });\n    };\n\n    p.windowResized = () => {\n        p.resizeCanvas(p.windowWidth, p.windowHeight * 4);\n    };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}