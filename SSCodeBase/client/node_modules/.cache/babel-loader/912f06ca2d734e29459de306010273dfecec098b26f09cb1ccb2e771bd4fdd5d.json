{"ast":null,"code":"import React,{useState,useCallback}from'react';import{debounce}from'lodash';import AnimeBox from'../Components/animebox';import AnimeInfo from'./animeInfo';import'./animelis.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function AnimeList(){const[animeList,setAnimeList]=useState([]);const[searchTitle,setSearchTitle]=useState('');const[suggestions,setSuggestions]=useState([]);const[error,setError]=useState(null);const[isFocused,setIsFocused]=useState(false);const[currentPage,setCurrentPage]=useState(1);const[selectedAnime,setSelectedAnime]=useState(null);// New state for selected anime\nconst RESULTS_PER_PAGE=22;const cache=new Map();const MAX_CACHE_SIZE=50;const fetchAnimeData=async function(title){let limit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:10;if(!title)return[];try{if(cache.has(title)){const cachedData=cache.get(title);setSuggestions(cachedData.slice(0,limit));return cachedData;}const response=await fetch(`http://localhost:5000/api/anime/${title}`);if(!response.ok)throw new Error(`Error fetching anime: ${response.statusText}`);const data=await response.json();const animeListData=data.data.map(anime=>{var _anime$studios,_anime$studios$;return{title:anime.titles[0].title,imageUrl:anime.images.jpg.image_url,description:anime.synopsis,studio:((_anime$studios=anime.studios)===null||_anime$studios===void 0?void 0:(_anime$studios$=_anime$studios[0])===null||_anime$studios$===void 0?void 0:_anime$studios$.name)||'Unknown',episodes:anime.episodes,score:anime.score,releaseDate:anime.aired.from?new Date(anime.aired.from).toDateString():'Unknown'};});cache.set(title,animeListData);if(cache.size>MAX_CACHE_SIZE){const oldestKey=cache.keys().next().value;cache.delete(oldestKey);}setSuggestions(animeListData.slice(0,limit));return animeListData;}catch(err){setError(err.message);return[];}};const debouncedFetchAnimeData=useCallback(debounce(title=>{if(title)fetchAnimeData(title);},300),[]);const handleSearchChange=e=>{const title=e.target.value;setSearchTitle(title);if(title){debouncedFetchAnimeData(title);}else{setSuggestions([]);setError(null);debouncedFetchAnimeData.cancel();}};const handleSearch=async()=>{if(!searchTitle)return;try{const results=cache.get(searchTitle)||(await fetchAnimeData(searchTitle,Infinity));setAnimeList(results||[]);setCurrentPage(1);setSuggestions([]);// Clear suggestions when search is finalized\n}catch(err){console.error(err);}};const handlePageChange=page=>setCurrentPage(page);const handleAnimeClick=anime=>{console.log(\"click\");setSelectedAnime(anime);// Set selected anime to display in AnimeInfo\n};const handleCloseInfo=()=>{setSelectedAnime(null);// Clear selected anime to close AnimeInfo\n};const currentResults=animeList.slice((currentPage-1)*RESULTS_PER_PAGE,currentPage*RESULTS_PER_PAGE);return/*#__PURE__*/_jsxs(\"div\",{className:\"background\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"yes\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"search-container\",style:{position:'relative'},children:[/*#__PURE__*/_jsx(\"input\",{className:\"search\",type:\"text\",placeholder:\"Enter anime title\",value:searchTitle,onChange:handleSearchChange,onFocus:()=>setIsFocused(true),onBlur:()=>setIsFocused(false),onKeyDown:e=>{if(e.key==='Enter'){e.preventDefault();handleSearch();}}}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSearch,children:\"Search Anime\"}),suggestions.length>0&&isFocused&&/*#__PURE__*/_jsx(\"ul\",{className:\"suggestions show\",children:suggestions.slice(0,10).map((anime,index)=>/*#__PURE__*/_jsx(\"li\",{onClick:()=>setSearchTitle(anime.title),children:anime.title},index))})]}),/*#__PURE__*/_jsxs(\"div\",{id:\"no\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"anime-list\",children:currentResults.map((anime,index)=>/*#__PURE__*/_jsx(AnimeBox,{title:anime.title,imageUrl:anime.imageUrl,onClick:()=>handleAnimeClick(anime)// Handle click to open AnimeInfo\n},index))}),/*#__PURE__*/_jsx(\"div\",{className:\"pagination\",children:Array.from({length:Math.ceil(animeList.length/RESULTS_PER_PAGE)},(_,i)=>/*#__PURE__*/_jsx(\"button\",{className:currentPage===i+1?'active':'',onClick:()=>handlePageChange(i+1),children:i+1},i))})]}),error&&/*#__PURE__*/_jsx(\"p\",{style:{color:'red'},children:error})]}),/*#__PURE__*/_jsx(\"div\",{className:\"image\"}),selectedAnime&&/*#__PURE__*/_jsx(AnimeInfo,{anime:selectedAnime,onClose:handleCloseInfo})]});}export default AnimeList;","map":{"version":3,"names":["React","useState","useCallback","debounce","AnimeBox","AnimeInfo","jsx","_jsx","jsxs","_jsxs","AnimeList","animeList","setAnimeList","searchTitle","setSearchTitle","suggestions","setSuggestions","error","setError","isFocused","setIsFocused","currentPage","setCurrentPage","selectedAnime","setSelectedAnime","RESULTS_PER_PAGE","cache","Map","MAX_CACHE_SIZE","fetchAnimeData","title","limit","arguments","length","undefined","has","cachedData","get","slice","response","fetch","ok","Error","statusText","data","json","animeListData","map","anime","_anime$studios","_anime$studios$","titles","imageUrl","images","jpg","image_url","description","synopsis","studio","studios","name","episodes","score","releaseDate","aired","from","Date","toDateString","set","size","oldestKey","keys","next","value","delete","err","message","debouncedFetchAnimeData","handleSearchChange","e","target","cancel","handleSearch","results","Infinity","console","handlePageChange","page","handleAnimeClick","log","handleCloseInfo","currentResults","className","children","style","position","type","placeholder","onChange","onFocus","onBlur","onKeyDown","key","preventDefault","onClick","index","id","Array","Math","ceil","_","i","color","onClose"],"sources":["/home/venicio/Code-Stuffs/ACM/DEV/SenpaiSuggests/SSCodeBase/client/src/pages/animelist.jsx"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { debounce } from 'lodash';\nimport AnimeBox from '../Components/animebox';\nimport AnimeInfo from './animeInfo';\nimport './animelis.css';\n\nfunction AnimeList() {\n    const [animeList, setAnimeList] = useState([]);\n    const [searchTitle, setSearchTitle] = useState('');\n    const [suggestions, setSuggestions] = useState([]);\n    const [error, setError] = useState(null);\n    const [isFocused, setIsFocused] = useState(false);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [selectedAnime, setSelectedAnime] = useState(null); // New state for selected anime\n    const RESULTS_PER_PAGE = 22;\n    const cache = new Map();\n    const MAX_CACHE_SIZE = 50;\n\n    const fetchAnimeData = async (title, limit = 10) => {\n        if (!title) return [];\n\n        try {\n            if (cache.has(title)) {\n                const cachedData = cache.get(title);\n                setSuggestions(cachedData.slice(0, limit));\n                return cachedData;\n            }\n\n            const response = await fetch(`http://localhost:5000/api/anime/${title}`);\n            if (!response.ok) throw new Error(`Error fetching anime: ${response.statusText}`);\n            const data = await response.json();\n            const animeListData = data.data.map((anime) => ({\n                title: anime.titles[0].title,\n                imageUrl: anime.images.jpg.image_url,\n                description: anime.synopsis,\n                studio: anime.studios?.[0]?.name || 'Unknown',\n                episodes: anime.episodes,\n                score: anime.score,\n                releaseDate: anime.aired.from ? new Date(anime.aired.from).toDateString() : 'Unknown'\n            }));\n\n            cache.set(title, animeListData);\n            if (cache.size > MAX_CACHE_SIZE) {\n                const oldestKey = cache.keys().next().value;\n                cache.delete(oldestKey);\n            }\n\n            setSuggestions(animeListData.slice(0, limit));\n            return animeListData;\n        } catch (err) {\n            setError(err.message);\n            return [];\n        }\n    };\n\n    const debouncedFetchAnimeData = useCallback(\n        debounce((title) => {\n            if (title) fetchAnimeData(title);\n        }, 300),\n        []\n    );\n\n    const handleSearchChange = (e) => {\n        const title = e.target.value;\n        setSearchTitle(title);\n\n        if (title) {\n            debouncedFetchAnimeData(title);\n        } else {\n            setSuggestions([]);\n            setError(null);\n            debouncedFetchAnimeData.cancel();\n        }\n    };\n\n    const handleSearch = async () => {\n        if (!searchTitle) return;\n\n        try {\n            const results = cache.get(searchTitle) || await fetchAnimeData(searchTitle, Infinity);\n            setAnimeList(results || []);\n            setCurrentPage(1);\n            setSuggestions([]); // Clear suggestions when search is finalized\n        } catch (err) {\n            console.error(err);\n        }\n    };\n\n    const handlePageChange = (page) => setCurrentPage(page);\n\n    const handleAnimeClick = (anime) => {\n        console.log(\"click\");\n        setSelectedAnime(anime); // Set selected anime to display in AnimeInfo\n    };\n\n    const handleCloseInfo = () => {\n        setSelectedAnime(null); // Clear selected anime to close AnimeInfo\n    };\n\n    const currentResults = animeList.slice(\n        (currentPage - 1) * RESULTS_PER_PAGE,\n        currentPage * RESULTS_PER_PAGE\n    );\n\n    return (\n        <div className=\"background\">\n            <div className=\"yes\">\n                <div className=\"search-container\" style={{ position: 'relative' }}>\n                    <input\n                        className=\"search\"\n                        type=\"text\"\n                        placeholder=\"Enter anime title\"\n                        value={searchTitle}\n                        onChange={handleSearchChange}\n                        onFocus={() => setIsFocused(true)}\n                        onBlur={() => setIsFocused(false)}\n                        onKeyDown={(e) => {\n                            if (e.key === 'Enter') {\n                                e.preventDefault();\n                                handleSearch();\n                            }\n                        }}\n                    />\n                    <button onClick={handleSearch}>Search Anime</button>\n\n                    {suggestions.length > 0 && isFocused && (\n                        <ul className=\"suggestions show\">\n                            {suggestions.slice(0, 10).map((anime, index) => (\n                                <li key={index} onClick={() => setSearchTitle(anime.title)}>\n                                    {anime.title}\n                                </li>\n                            ))}\n                        </ul>\n                    )}\n                </div>\n\n                <div id=\"no\">\n                    <div className=\"anime-list\">\n                        {currentResults.map((anime, index) => (\n                            <AnimeBox\n                                key={index}\n                                title={anime.title}\n                                imageUrl={anime.imageUrl}\n                                onClick={() => handleAnimeClick(anime)} // Handle click to open AnimeInfo\n                            />\n                        ))}\n                    </div>\n                    <div className=\"pagination\">\n                        {Array.from({ length: Math.ceil(animeList.length / RESULTS_PER_PAGE) }, (_, i) => (\n                            <button\n                                key={i}\n                                className={currentPage === i + 1 ? 'active' : ''}\n                                onClick={() => handlePageChange(i + 1)}\n                            >\n                                {i + 1}\n                            </button>\n                        ))}\n                    </div>\n                </div>\n\n                {error && <p style={{ color: 'red' }}>{error}</p>}\n            </div>\n            <div className='image'></div>\n            {selectedAnime && <AnimeInfo anime={selectedAnime} onClose={handleCloseInfo} />}\n        </div>\n    );\n}\n\nexport default AnimeList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}