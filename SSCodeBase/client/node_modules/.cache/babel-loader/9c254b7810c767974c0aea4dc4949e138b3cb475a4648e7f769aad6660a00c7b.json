{"ast":null,"code":"var _jsxFileName = \"/home/venicio/Code-Stuffs/ACM/DEV/SenpaiSuggests/SSCodeBase/client/src/Components/Tile.jsx\";\nimport React from 'react';\nimport { getAnimeByID } from '../utils';\n\n/*  should take in props to customize a given tile\n *    picture\n *    anime title\n *    (MAYBE) genre / other info?\n *    haveAddToWishList button (which would be false when used in WishListPage)\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Tile({\n  ID\n}) {\n  const animeByID = getAnimeByID(ID);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative',\n      textAlign: 'center',\n      background: 'rgba(80, 140, 150, 0.6)',\n      borderRadius: '15px',\n      padding: '30px',\n      width: '200px',\n      maxWidth: '90%',\n      boxShadow: '0px 0px 15px rgba(20, 30, 50, 0.5), 0px 0px 30px rgba(80, 140, 150, 0.3)'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: animeByID.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: animeByID.image,\n      alt: \"No Image Available\",\n      height: 150,\n      width: 150\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_c = Tile;\nvar _c;\n$RefreshReg$(_c, \"Tile\");","map":{"version":3,"names":["React","getAnimeByID","jsxDEV","_jsxDEV","Tile","ID","animeByID","style","position","textAlign","background","borderRadius","padding","width","maxWidth","boxShadow","children","title","fileName","_jsxFileName","lineNumber","columnNumber","src","image","alt","height","_c","$RefreshReg$"],"sources":["/home/venicio/Code-Stuffs/ACM/DEV/SenpaiSuggests/SSCodeBase/client/src/Components/Tile.jsx"],"sourcesContent":["import React from 'react';\nimport { getAnimeByID } from '../utils';\n\n/*  should take in props to customize a given tile\n *    picture\n *    anime title\n *    (MAYBE) genre / other info?\n *    haveAddToWishList button (which would be false when used in WishListPage)\n */\n\nexport default function Tile( { ID } ) {\n  const animeByID = getAnimeByID(ID);\n\n  return (\n    <div\n      style={{\n        position: 'relative',\n        textAlign: 'center',\n        background: 'rgba(80, 140, 150, 0.6)',\n        borderRadius: '15px',\n        padding: '30px',\n        width: '200px',\n        maxWidth: '90%',\n        boxShadow: '0px 0px 15px rgba(20, 30, 50, 0.5), 0px 0px 30px rgba(80, 140, 150, 0.3)'\n      }}\n    >\n      <h2>\n        {animeByID.title}\n      </h2>\n      <img\n        src={animeByID.image}\n        alt='No Image Available'\n        height={150}\n        width={150}\n      />\n    </div>\n  )\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,UAAU;;AAEvC;AACA;AACA;AACA;AACA;AACA;AALA,SAAAC,MAAA,IAAAC,OAAA;AAOA,eAAe,SAASC,IAAIA,CAAE;EAAEC;AAAG,CAAC,EAAG;EACrC,MAAMC,SAAS,GAAGL,YAAY,CAACI,EAAE,CAAC;EAElC,oBACEF,OAAA;IACEI,KAAK,EAAE;MACLC,QAAQ,EAAE,UAAU;MACpBC,SAAS,EAAE,QAAQ;MACnBC,UAAU,EAAE,yBAAyB;MACrCC,YAAY,EAAE,MAAM;MACpBC,OAAO,EAAE,MAAM;MACfC,KAAK,EAAE,OAAO;MACdC,QAAQ,EAAE,KAAK;MACfC,SAAS,EAAE;IACb,CAAE;IAAAC,QAAA,gBAEFb,OAAA;MAAAa,QAAA,EACGV,SAAS,CAACW;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC,eACLlB,OAAA;MACEmB,GAAG,EAAEhB,SAAS,CAACiB,KAAM;MACrBC,GAAG,EAAC,oBAAoB;MACxBC,MAAM,EAAE,GAAI;MACZZ,KAAK,EAAE;IAAI;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACK,EAAA,GA3BuBtB,IAAI;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}