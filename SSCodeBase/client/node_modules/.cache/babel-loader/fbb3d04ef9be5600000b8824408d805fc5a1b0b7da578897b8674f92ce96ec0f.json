{"ast":null,"code":"var _jsxFileName = \"/home/venicio/Code-Stuffs/ACM/DEV/SenpaiSuggests/SSCodeBase/client/src/Components/TileGrid.jsx\";\nimport Tile from \"./Tile\";\nimport './TileGrid.module.css';\n\n// should take in props so it can be customized for different uses\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TileGrid() {\n  // do stuff to set up <Tile> compon.s grid of tiles :P\n  let counter = 0;\n  let listOfAnimeTitles = [\"Sup\", \"Hello\", \"How goes it\"];\n  let listOfTiles = [];\n  listOfAnimeTitles.forEach(currTitle => {\n    listOfTiles[counter] = /*#__PURE__*/_jsxDEV(Tile, {\n      name: currTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 28\n    }, this);\n    ++counter;\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Tile, {\n      name: \"blank1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tile, {\n      name: \"blank2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = TileGrid;\nvar _c;\n$RefreshReg$(_c, \"TileGrid\");","map":{"version":3,"names":["Tile","jsxDEV","_jsxDEV","Fragment","_Fragment","TileGrid","counter","listOfAnimeTitles","listOfTiles","forEach","currTitle","name","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["/home/venicio/Code-Stuffs/ACM/DEV/SenpaiSuggests/SSCodeBase/client/src/Components/TileGrid.jsx"],"sourcesContent":["import Tile from \"./Tile\";\nimport './TileGrid.module.css';\n\n\n\n// should take in props so it can be customized for different uses\nexport default function TileGrid() {\n  // do stuff to set up <Tile> compon.s grid of tiles :P\n  let counter = 0;\n\n  let listOfAnimeTitles = [\"Sup\", \"Hello\", \"How goes it\"];\n  let listOfTiles = [];\n\n  listOfAnimeTitles.forEach((currTitle) => {\n    listOfTiles[counter] = <Tile name={currTitle} />;\n    ++counter;\n  })\n\n  return (\n    <>\n      <Tile name=\"blank1\" />\n      <Tile name=\"blank2\" />\n    </>\n  )\n}\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,QAAQ;AACzB,OAAO,uBAAuB;;AAI9B;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,eAAe,SAASC,QAAQA,CAAA,EAAG;EACjC;EACA,IAAIC,OAAO,GAAG,CAAC;EAEf,IAAIC,iBAAiB,GAAG,CAAC,KAAK,EAAE,OAAO,EAAE,aAAa,CAAC;EACvD,IAAIC,WAAW,GAAG,EAAE;EAEpBD,iBAAiB,CAACE,OAAO,CAAEC,SAAS,IAAK;IACvCF,WAAW,CAACF,OAAO,CAAC,gBAAGJ,OAAA,CAACF,IAAI;MAACW,IAAI,EAAED;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IAChD,EAAET,OAAO;EACX,CAAC,CAAC;EAEF,oBACEJ,OAAA,CAAAE,SAAA;IAAAY,QAAA,gBACEd,OAAA,CAACF,IAAI;MAACW,IAAI,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtBb,OAAA,CAACF,IAAI;MAACW,IAAI,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACtB,CAAC;AAEP;AAACE,EAAA,GAlBuBZ,QAAQ;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}