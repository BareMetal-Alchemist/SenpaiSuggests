{"ast":null,"code":"// parallaxSketch.js\nexport const parallaxSketch = p => {\n  let layers = [];\n  let speed = 0.3;\n  p.setup = () => {\n    p.createCanvas(p.windowWidth, p.windowHeight);\n    for (let i = 0; i < 15; i++) {\n      layers.push({\n        x: p.random(p.width),\n        y: p.random(p.height),\n        size: p.random(60, 150),\n        speed: speed + i * 0.03\n      });\n    }\n  };\n  p.draw = () => {\n    p.clear();\n    p.noStroke();\n    layers.forEach(layer => {\n      p.fill(255, 108, 180, 120);\n      p.circle(layer.x, layer.y, layer.size);\n      layer.x += layer.speed;\n      if (layer.x > p.width) {\n        layer.x = -layer.size;\n        layer.y = p.random(p.height);\n      }\n    });\n  };\n  p.windowResized = () => {\n    p.resizeCanvas(p.windowWidth, p.windowHeight);\n  };\n};","map":{"version":3,"names":["parallaxSketch","p","layers","speed","setup","createCanvas","windowWidth","windowHeight","i","push","x","random","width","y","height","size","draw","clear","noStroke","forEach","layer","fill","circle","windowResized","resizeCanvas"],"sources":["/home/a/code/repos/SenpaiSuggests/SSCodeBase/client/src/pages/parallaxSketch.js"],"sourcesContent":["// parallaxSketch.js\nexport const parallaxSketch = (p) => {\n    let layers = [];\n    let speed = 0.3;\n\n    p.setup = () => {\n        p.createCanvas(p.windowWidth, p.windowHeight);\n        for (let i = 0; i < 15; i++) {\n            layers.push({\n                x: p.random(p.width),\n                y: p.random(p.height),\n                size: p.random(60, 150),\n                speed: speed + i * 0.03\n            });\n        }\n    };\n\n    p.draw = () => {\n        p.clear();\n        p.noStroke();\n        \n        layers.forEach(layer => {\n            p.fill(255, 108, 180, 120); \n            p.circle(layer.x, layer.y, layer.size);\n            layer.x += layer.speed;\n\n            if (layer.x > p.width) {\n                layer.x = -layer.size;\n                layer.y = p.random(p.height);\n            }\n        });\n    };\n\n    p.windowResized = () => {\n        p.resizeCanvas(p.windowWidth, p.windowHeight);\n    };\n};\n"],"mappings":"AAAA;AACA,OAAO,MAAMA,cAAc,GAAIC,CAAC,IAAK;EACjC,IAAIC,MAAM,GAAG,EAAE;EACf,IAAIC,KAAK,GAAG,GAAG;EAEfF,CAAC,CAACG,KAAK,GAAG,MAAM;IACZH,CAAC,CAACI,YAAY,CAACJ,CAAC,CAACK,WAAW,EAAEL,CAAC,CAACM,YAAY,CAAC;IAC7C,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;MACzBN,MAAM,CAACO,IAAI,CAAC;QACRC,CAAC,EAAET,CAAC,CAACU,MAAM,CAACV,CAAC,CAACW,KAAK,CAAC;QACpBC,CAAC,EAAEZ,CAAC,CAACU,MAAM,CAACV,CAAC,CAACa,MAAM,CAAC;QACrBC,IAAI,EAAEd,CAAC,CAACU,MAAM,CAAC,EAAE,EAAE,GAAG,CAAC;QACvBR,KAAK,EAAEA,KAAK,GAAGK,CAAC,GAAG;MACvB,CAAC,CAAC;IACN;EACJ,CAAC;EAEDP,CAAC,CAACe,IAAI,GAAG,MAAM;IACXf,CAAC,CAACgB,KAAK,CAAC,CAAC;IACThB,CAAC,CAACiB,QAAQ,CAAC,CAAC;IAEZhB,MAAM,CAACiB,OAAO,CAACC,KAAK,IAAI;MACpBnB,CAAC,CAACoB,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;MAC1BpB,CAAC,CAACqB,MAAM,CAACF,KAAK,CAACV,CAAC,EAAEU,KAAK,CAACP,CAAC,EAAEO,KAAK,CAACL,IAAI,CAAC;MACtCK,KAAK,CAACV,CAAC,IAAIU,KAAK,CAACjB,KAAK;MAEtB,IAAIiB,KAAK,CAACV,CAAC,GAAGT,CAAC,CAACW,KAAK,EAAE;QACnBQ,KAAK,CAACV,CAAC,GAAG,CAACU,KAAK,CAACL,IAAI;QACrBK,KAAK,CAACP,CAAC,GAAGZ,CAAC,CAACU,MAAM,CAACV,CAAC,CAACa,MAAM,CAAC;MAChC;IACJ,CAAC,CAAC;EACN,CAAC;EAEDb,CAAC,CAACsB,aAAa,GAAG,MAAM;IACpBtB,CAAC,CAACuB,YAAY,CAACvB,CAAC,CAACK,WAAW,EAAEL,CAAC,CAACM,YAAY,CAAC;EACjD,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}