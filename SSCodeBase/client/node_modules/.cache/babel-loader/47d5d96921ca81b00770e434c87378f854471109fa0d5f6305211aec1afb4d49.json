{"ast":null,"code":"// parallaxSketch.js\nexport const parallaxSketch = p => {\n  let layers = [];\n  const layerCount = 15;\n  p.setup = () => {\n    p.createCanvas(p.windowWidth, p.windowHeight);\n    for (let i = 0; i < layerCount; i++) {\n      layers.push({\n        x: p.random(p.width),\n        y: p.random(p.height),\n        size: p.random(30, 120),\n        speed: 0.3 + i * 0.05\n      });\n    }\n  };\n  p.draw = () => {\n    p.background(15, 15, 35); // Darker background for contrast\n    p.noStroke();\n    layers.forEach(layer => {\n      p.fill(180, 108, 255, 150); // Light purple with transparency\n      p.circle(layer.x, layer.y, layer.size);\n      layer.x += layer.speed;\n      if (layer.x > p.width) {\n        layer.x = -layer.size;\n        layer.y = p.random(p.height);\n      }\n    });\n  };\n  p.windowResized = () => {\n    p.resizeCanvas(p.windowWidth, p.windowHeight);\n  };\n};","map":{"version":3,"names":["parallaxSketch","p","layers","layerCount","setup","createCanvas","windowWidth","windowHeight","i","push","x","random","width","y","height","size","speed","draw","background","noStroke","forEach","layer","fill","circle","windowResized","resizeCanvas"],"sources":["/home/a/code/repos/SenpaiSuggests/SSCodeBase/client/src/pages/parallaxSketch.js"],"sourcesContent":["// parallaxSketch.js\nexport const parallaxSketch = (p) => {\n    let layers = [];\n    const layerCount = 15;\n\n    p.setup = () => {\n        p.createCanvas(p.windowWidth, p.windowHeight);\n        for (let i = 0; i < layerCount; i++) {\n            layers.push({\n                x: p.random(p.width),\n                y: p.random(p.height),\n                size: p.random(30, 120),\n                speed: 0.3 + i * 0.05\n            });\n        }\n    };\n\n    p.draw = () => {\n        p.background(15, 15, 35); // Darker background for contrast\n        p.noStroke();\n\n        layers.forEach(layer => {\n            p.fill(180, 108, 255, 150); // Light purple with transparency\n            p.circle(layer.x, layer.y, layer.size);\n            layer.x += layer.speed;\n\n            if (layer.x > p.width) {\n                layer.x = -layer.size;\n                layer.y = p.random(p.height);\n            }\n        });\n    };\n\n    p.windowResized = () => {\n        p.resizeCanvas(p.windowWidth, p.windowHeight);\n    };\n};\n"],"mappings":"AAAA;AACA,OAAO,MAAMA,cAAc,GAAIC,CAAC,IAAK;EACjC,IAAIC,MAAM,GAAG,EAAE;EACf,MAAMC,UAAU,GAAG,EAAE;EAErBF,CAAC,CAACG,KAAK,GAAG,MAAM;IACZH,CAAC,CAACI,YAAY,CAACJ,CAAC,CAACK,WAAW,EAAEL,CAAC,CAACM,YAAY,CAAC;IAC7C,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,UAAU,EAAEK,CAAC,EAAE,EAAE;MACjCN,MAAM,CAACO,IAAI,CAAC;QACRC,CAAC,EAAET,CAAC,CAACU,MAAM,CAACV,CAAC,CAACW,KAAK,CAAC;QACpBC,CAAC,EAAEZ,CAAC,CAACU,MAAM,CAACV,CAAC,CAACa,MAAM,CAAC;QACrBC,IAAI,EAAEd,CAAC,CAACU,MAAM,CAAC,EAAE,EAAE,GAAG,CAAC;QACvBK,KAAK,EAAE,GAAG,GAAGR,CAAC,GAAG;MACrB,CAAC,CAAC;IACN;EACJ,CAAC;EAEDP,CAAC,CAACgB,IAAI,GAAG,MAAM;IACXhB,CAAC,CAACiB,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;IAC1BjB,CAAC,CAACkB,QAAQ,CAAC,CAAC;IAEZjB,MAAM,CAACkB,OAAO,CAACC,KAAK,IAAI;MACpBpB,CAAC,CAACqB,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;MAC5BrB,CAAC,CAACsB,MAAM,CAACF,KAAK,CAACX,CAAC,EAAEW,KAAK,CAACR,CAAC,EAAEQ,KAAK,CAACN,IAAI,CAAC;MACtCM,KAAK,CAACX,CAAC,IAAIW,KAAK,CAACL,KAAK;MAEtB,IAAIK,KAAK,CAACX,CAAC,GAAGT,CAAC,CAACW,KAAK,EAAE;QACnBS,KAAK,CAACX,CAAC,GAAG,CAACW,KAAK,CAACN,IAAI;QACrBM,KAAK,CAACR,CAAC,GAAGZ,CAAC,CAACU,MAAM,CAACV,CAAC,CAACa,MAAM,CAAC;MAChC;IACJ,CAAC,CAAC;EACN,CAAC;EAEDb,CAAC,CAACuB,aAAa,GAAG,MAAM;IACpBvB,CAAC,CAACwB,YAAY,CAACxB,CAAC,CAACK,WAAW,EAAEL,CAAC,CAACM,YAAY,CAAC;EACjD,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}